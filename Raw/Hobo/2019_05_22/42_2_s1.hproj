<?xml version="1.0" encoding="UTF-8"?>
<java version="1.8.0_131" class="java.beans.XMLDecoder">
 <object class="Appleseed.HOBOViewX">
  <void property="TFont">
   <string>Dialog.plain</string>
  </void>
  <void property="TFontSz">
   <int>12</int>
  </void>
  <void property="axes">
   <array class="Graphing.LGAxis" length="2">
    <void index="0">
     <object class="Graphing.LGAbsTimeAxis" id="LGAbsTimeAxis0">
      <void class="Graphing.LGAxis" method="getField">
       <string>mMinReal</string>
       <void method="set">
        <object idref="LGAbsTimeAxis0"/>
        <double>1.5537312E12</double>
       </void>
      </void>
      <void class="Graphing.LGAxis" method="getField">
       <string>mMaxReal</string>
       <void method="set">
        <object idref="LGAbsTimeAxis0"/>
        <double>1.5593472E12</double>
       </void>
      </void>
      <void class="Graphing.LGAxis" method="getField">
       <string>mGridFlag</string>
       <void method="set">
        <object idref="LGAbsTimeAxis0"/>
        <boolean>true</boolean>
       </void>
      </void>
      <void class="Graphing.LGBorderPane" method="getField">
       <string>mLocation</string>
       <void method="set">
        <object idref="LGAbsTimeAxis0"/>
        <int>2</int>
       </void>
      </void>
      <void class="Graphing.LGPane" method="getField">
       <string>mCustomFont</string>
       <void method="set">
        <object idref="LGAbsTimeAxis0"/>
        <boolean>true</boolean>
       </void>
      </void>
      <void property="MPaintSave">
       <object class="java.awt.Color" id="Color0">
        <int>0</int>
        <int>0</int>
        <int>0</int>
        <int>255</int>
       </object>
      </void>
      <void property="MStrokeSave">
       <object class="java.awt.BasicStroke" id="BasicStroke0">
        <float>1.0</float>
        <int>2</int>
        <int>0</int>
        <float>10.0</float>
        <null/>
        <float>0.0</float>
       </object>
      </void>
     </object>
    </void>
    <void index="1">
     <object class="Graphing.LGValueAxis" id="LGValueAxis0">
      <void class="Graphing.LGAxis" method="getField">
       <string>mMinReal</string>
       <void method="set">
        <object idref="LGValueAxis0"/>
        <double>-0.6</double>
       </void>
      </void>
      <void class="Graphing.LGAxis" method="getField">
       <string>mMaxReal</string>
       <void method="set">
        <object idref="LGValueAxis0"/>
        <double>0.6</double>
       </void>
      </void>
      <void class="Graphing.LGBorderPane" method="getField">
       <string>mLocation</string>
       <void method="set">
        <object idref="LGValueAxis0"/>
        <int>1</int>
       </void>
      </void>
      <void class="Graphing.LGPane" method="getField">
       <string>mCustomFont</string>
       <void method="set">
        <object idref="LGValueAxis0"/>
        <boolean>true</boolean>
       </void>
      </void>
      <void class="Graphing.LGPane" method="getField">
       <string>mName</string>
       <void method="set">
        <object idref="LGValueAxis0"/>
        <string>feet</string>
       </void>
      </void>
      <void property="MPaintSave">
       <object idref="Color0"/>
      </void>
      <void property="MStrokeSave">
       <object idref="BasicStroke0"/>
      </void>
     </object>
    </void>
   </array>
  </void>
  <void property="labelArray">
   <array class="Graphing.LGLabel" length="0"/>
  </void>
  <void property="legend">
   <object class="Graphing.LGLegend" id="LGLegend0">
    <void class="Graphing.LGPane" method="getField">
     <string>mCustomFont</string>
     <void method="set">
      <object idref="LGLegend0"/>
      <boolean>true</boolean>
     </void>
    </void>
    <void property="MPaintSave">
     <object idref="Color0"/>
    </void>
    <void property="MStrokeSave">
     <object idref="BasicStroke0"/>
    </void>
   </object>
  </void>
  <void property="series">
   <array class="Appleseed.HOBOViewX$HOBOSeriesX" length="1">
    <void index="0">
     <object class="Appleseed.HOBOViewX$HOBOSeriesX">
      <void property="FWVer">
       <string>1.14</string>
      </void>
      <void property="GMTMinsOrig">
       <int>-240</int>
      </void>
      <void property="GMTMinsRaw">
       <int>-300</int>
      </void>
      <void property="ID">
       <int>8</int>
      </void>
      <void property="LDesc">
       <string>Sensor Depth</string>
      </void>
      <void property="OMName">
       <string>OLServices.measurement.OMDepth_Otter</string>
      </void>
      <void property="SDesc">
       <string>Sensor Depth</string>
      </void>
      <void property="SN">
       <string>20566220</string>
      </void>
      <void property="YAxis">
       <int>1</int>
      </void>
      <void property="avg">
       <double>-0.165</double>
      </void>
      <void property="battLnch">
       <float>3.51</float>
      </void>
      <void property="calDate">
       <double>1.55110371789E12</double>
      </void>
      <void property="channelDisplayMode">
       <object class="java.lang.Enum" method="valueOf">
        <class>Appleseed.OPlotManager$ChannelDisplayModes</class>
        <string>LOGGER</string>
       </object>
      </void>
      <void property="channelMax">
       <double>30.0</double>
      </void>
      <void property="customInfo">
       <array class="java.lang.String" length="3">
        <void index="0">
         <string>Barometric Compensation Parameters</string>
        </void>
        <void index="1">
         <string>Fluid Density: Derived from Temp. Channel</string>
        </void>
        <void index="2">
         <string>Barometric Datafile: C:\Users\Joshua9\Documents\Hubbard Brook\Water Level\5_22_2019\Barometric.hobo</string>
        </void>
       </array>
      </void>
      <void property="data">
       <string></string>
      </void>
      <void property="depN">
       <int>3</int>
      </void>
      <void property="derived">
       <boolean>false</boolean>
      </void>
      <void property="devMem">
       <int>65536</int>
      </void>
      <void property="fstSampleTime">
       <double>1.5537744E12</double>
      </void>
      <void property="fstScaleRaw">
       <double>NaN</double>
      </void>
      <void property="fstScaleReal">
       <double>NaN</double>
      </void>
      <void property="hdrDate">
       <double>1.550865060108E12</double>
      </void>
      <void property="interval">
       <array class="double" length="1">
        <void index="0">
         <double>600.0</double>
        </void>
       </array>
      </void>
      <void property="launcherString">
       <string>HOBOware Pro-3.7.12_0425_0948_Windows</string>
      </void>
      <void property="lnchDesc">
       <string>42.2.S1</string>
      </void>
      <void property="lnchTime">
       <double>1.553703273E12</double>
      </void>
      <void property="max">
       <double>0.486</double>
      </void>
      <void property="min">
       <double>-0.521</double>
      </void>
      <void property="mnfc">
       <string>Onset Computer Corporation</string>
      </void>
      <void property="prodID">
       <string>HOBO U20L-04 Water Level</string>
      </void>
      <void property="real">
       <boolean>false</boolean>
      </void>
      <void property="runtimeDescription">
       <object class="java.lang.Enum" method="valueOf">
        <class>OLServices.channel.OChannel$ERUNTIME_DESCRIPTION</class>
        <string>ERUNTIME_DESC_UNDEFINED</string>
       </object>
      </void>
      <void property="runtimeUnits">
       <object class="java.lang.Enum" method="valueOf">
        <class>OLServices.channel.OChannel$ERUNTIME_UNITS</class>
        <string>ERUNTIME_UNIT_UNDEFINED</string>
       </object>
      </void>
      <void property="samplesN">
       <array class="int" length="1">
        <void index="0">
         <int>7918</int>
        </void>
       </array>
      </void>
      <void property="scdScaleRaw">
       <double>NaN</double>
      </void>
      <void property="scdScaleReal">
       <double>NaN</double>
      </void>
      <void property="series">
       <object class="Graphing.LGSeries" id="LGSeries0">
        <void class="Graphing.LGSeries" method="getField">
         <string>mLinesFlag</string>
         <void method="set">
          <object idref="LGSeries0"/>
          <boolean>true</boolean>
         </void>
        </void>
        <void class="Graphing.LGSeries" method="getField">
         <string>m_ArrayUnitOptions</string>
         <void method="set">
          <object idref="LGSeries0"/>
          <array class="java.lang.String" length="2">
           <void index="0">
            <string>meters</string>
           </void>
           <void index="1">
            <string>feet</string>
           </void>
          </array>
         </void>
        </void>
        <void class="Graphing.LGSeries" method="getField">
         <string>m_iCurrentUnitIndex</string>
         <void method="set">
          <object idref="LGSeries0"/>
          <int>1</int>
         </void>
        </void>
        <void class="Graphing.LGSeries" method="getField">
         <string>mUnitName</string>
         <void method="set">
          <object idref="LGSeries0"/>
          <string>feet</string>
         </void>
        </void>
        <void class="Graphing.LGSeries" method="getField">
         <string>dataSetId</string>
         <void method="set">
          <object idref="LGSeries0"/>
          <string>1833867087</string>
         </void>
        </void>
        <void class="Graphing.LGPane" method="getField">
         <string>mCustomFont</string>
         <void method="set">
          <object idref="LGSeries0"/>
          <boolean>true</boolean>
         </void>
        </void>
        <void class="Graphing.LGPane" method="getField">
         <string>mName</string>
         <void method="set">
          <object idref="LGSeries0"/>
          <string>Sensor Depth</string>
         </void>
        </void>
        <void property="MPaintSave">
         <object idref="Color0"/>
        </void>
        <void property="MStrokeSave">
         <object idref="BasicStroke0"/>
        </void>
        <void property="startTimes">
         <null/>
        </void>
       </object>
      </void>
      <void property="startLoggingDelay">
       <double>71127.0</double>
      </void>
      <void property="stdDev">
       <double>0.2373811821688273</double>
      </void>
      <void property="timeZoneID">
       <string>GMT-04:00</string>
      </void>
      <void property="useDerivedAndReal">
       <boolean>true</boolean>
      </void>
      <void property="valPatt">
       <string>#,##0.000;-#,##0.000</string>
      </void>
     </object>
    </void>
   </array>
  </void>
  <void property="title">
   <object class="Graphing.LGTitle" id="LGTitle0">
    <void class="Graphing.LGPane" method="getField">
     <string>mCustomFont</string>
     <void method="set">
      <object idref="LGTitle0"/>
      <boolean>true</boolean>
     </void>
    </void>
    <void class="Graphing.LGPane" method="getField">
     <string>mName</string>
     <void method="set">
      <object idref="LGTitle0"/>
      <string>42.2.S1</string>
     </void>
    </void>
    <void property="font">
     <object class="java.awt.Font">
      <string>Dialog</string>
      <int>0</int>
      <int>12</int>
     </object>
    </void>
   </object>
  </void>
  <void property="vendor">
   <string>Onset Computer Corporation</string>
  </void>
  <void property="version">
   <int>9</int>
  </void>
 </object>
</java>
